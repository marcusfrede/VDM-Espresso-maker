class WaterTankController

instance variables
public tankTempSensor 		: TemperatureSensor := new TemperatureSensor(1, <TEMPSENSOR>);
tankLevelSensor 	: LevelSensor := new LevelSensor(1, <LEVELSENSOR>);
heatingElement 		: HeatingElement := new HeatingElement(1);
coolingElement 		: CoolingElement := new CoolingElement(1);
waterPump					: WaterPump := new WaterPump();
inv TempInv(tankTempSensor);

functions

-- temp must be higher than 0 and below 40 to prevent growth of bacteria 
TempInv: TemperatureSensor -> bool
TempInv(ts) == (
	ts.ReadValue() >= 0 and ts.ReadValue() <= 40
);

operations



public FillTank: () ==> ()
FillTank() ==    
	waterPump.FillTank()
pre tankLevelSensor.ReadValue() < 0
post tankLevelSensor.ReadValue() = 100;

public EmptyTank: () ==> ()
EmptyTank() ==          
	waterPump.EmptyTank()
pre tankLevelSensor.ReadValue() > 0
post tankLevelSensor.ReadValue() = 0;

public HeatWater: () ==> ()
HeatWater() ==         
	heatingElement.Step();

public CoolWater: () ==> ()
CoolWater() ==         
	coolingElement.Step();

public TakeWater: nat1 ==> ()
TakeWater(w) == (
	dcl tot : nat := 0;
	while tot < w do
	 	tot := tot + waterPump.WaterOut();
); -- kan laves med recursion!!!


end WaterTankController