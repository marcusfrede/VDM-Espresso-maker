class WaterTankController is subclass of GLOBAL

instance variables



inv TempInv(tankTempSensor);

public tankTempSensor 		: TemperatureSensor := new TemperatureSensor(1, <TEMPSENSOR>);

heatingElement 		: HeatingElement := new HeatingElement(1);
coolingElement 		: CoolingElement := new CoolingElement(1);
waterPump 				: WaterPump 		 := new WaterPump(1);

functions
 
TempInv: TemperatureSensor -> bool
TempInv(s) == (
	s.ReadValue() >= 0 and s.ReadValue() <= 100
);

operations

public TakeWater: nat ==> ()
TakeWater(w) == (
	if w > 0
	then (
				let newLevel = waterPump.DecWaterLevel(waterPump.GetWaterLevel(), w) in
				IO`printf("\nNew water level %1s\n",[newLevel]); 
				TakeWater(w-5);
			 )
	else return;
);

public CheckWater: nat1 ==> bool
CheckWater(lvl) == ( 			
	if waterPump.GetWaterLevel() > maxWaterTankTemp
	then ( 
				IO`print("\nWater cooling needed!\n");
				CoolWater(); 
				return false
			 );
	 			
	if tankTempSensor.ReadValue() < minWaterTankTemp		
	then ( 
				IO`print("\nWater heating needed!\n"); 
				HeatWater(); 
				return false
			 );
	
	if waterPump.GetWaterLevel() < lvl
	then (
				let newLevel = waterPump.IncWaterLevel(waterPump.GetWaterLevel(), lvl) in
				IO`printf("\nNew water level %1s\n",[newLevel]); 
				return false
			 );
			 
	return true;
);


private HeatWater: () ==> ()
HeatWater() ==         
	heatingElement.Step();

private CoolWater: () ==> ()
CoolWater() ==         
	coolingElement.Step();


end WaterTankController