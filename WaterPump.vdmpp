class WaterPump 

functions 


operations 
/*
public WaterIn: () ==> ()
	WaterIn() ==
		World`env.IncWaterLevel();
	*/
	
public WaterOut: () ==> nat
	WaterOut() ==
		World`env.DecWaterLevel();

public FillTank: nat1 ==> ()
	FillTank(up) == ( 
			if World`env.IncWaterLevel() < up 
	  	then FillTank(up)
	  	else return;
	);
--post (World`env.GetWaterLevel() - 1) = up;

public EmptyTank: () ==> ()
	EmptyTank() == 
		if World`env.DecWaterLevel() > 0 
		then EmptyTank()
		else return;
	

--measure Empty;

Empty: () ==> nat
Empty() ==
World`env.GetWaterLevel();			          	       	  	




end WaterPump