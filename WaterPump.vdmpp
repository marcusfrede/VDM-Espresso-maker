class WaterPump

functions 


operations 
/*
public WaterIn: () ==> ()
	WaterIn() ==
		World`env.IncWaterLevel();
	*/
	
public WaterOut: () ==> nat
	WaterOut() ==
		World`env.DecWaterLevel();

public FillTank: () ==> ()
	FillTank() == 
		let s : nat = World`env.IncWaterLevel() in
			if s < 100 
	  	then FillTank()
	  	else return;


public EmptyTank: () ==> ()
	EmptyTank() == 
		if World`env.DecWaterLevel() > 0 
		then EmptyTank()
		else return;
	 
--measure Empty;

Empty: () ==> nat
Empty() ==
World`env.GetWaterLevel();			          	       	  	




end WaterPump